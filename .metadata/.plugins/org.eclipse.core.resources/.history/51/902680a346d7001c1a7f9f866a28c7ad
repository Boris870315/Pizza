package yummypizza;



import java.util.HashMap;
import java.util.Iterator;

import javax.swing.JDialog;

import org.springframework.beans.factory.InitializingBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;


import yummypizza.gui.Cart;
import yummypizza.gui.PizzaMenu;
import yummypizza.gui.SelectMenu;
import yummypizza.gui.SelectSideMenu;
import yummypizza.model.Order2;
import yummypizza.model.Pizza;
import yummypizza.model.SideMenu;
import yummypizza.model.product.Base;
import yummypizza.model.product.Menu;
import yummypizza.model.product.Sauce;
import yummypizza.model.product.SideOption;
import yummypizza.model.product.Size;
import yummypizza.model.product.Topping;
import yummypizza.repo.OrderList;
import yummypizza.repo.PizzaList;
import yummypizza.repo.SideMenuList;

@SpringBootApplication
public class App implements InitializingBean {

	@Autowired
	private OrderList orders;
	@Autowired
	private PizzaList pizzas;
	@Autowired
	private SideMenuList sidemenus;
	
	private HashMap<String, Object> map = new HashMap();
	
	
	
	
	Order2 order;

	// list the menu

	/*
	 * first choose the pizza or side menu and then print one of them
	 */

	private  void printMenu() {
		System.out.println(Menu.question);
		for (int i = 0; i < Menu.values().length; i++) {
			System.out.println(Menu.descriptions[i]);

		}
		for (Menu menu : Menu.values()) {
			System.out.println(menu);
		}

	}

	/**
	 * 
	 * @return ����ϥΪ̿�J���ﶵ
	 */
	private  Menu getSelectedMenu() {
		//return Menu.pizza;
		return Menu.sidemenu;
	}

	private  void printPizza() {
		System.out.println(Base.question);
		for (Base b : Base.values()) {
			System.out.println(b.getDescription());
		}

		System.out.println(Sauce.question);
		for (int i = 0; i < Sauce.values().length; i++) {
			System.out.println(Sauce.descriptions[i]);
		}

		System.out.println(Size.question);
		for (int i = 0; i < Size.values().length; i++) {
			System.out.println(Size.descriptions[i]);
		}

		System.out.println(Topping.question);
		for (int i = 0; i < Topping.values().length; i++) {
			System.out.println(Topping.descriptions[i]);
		}
	}
	private  void printSideMenu() {
		System.out.println(SideOption.question);
		for (int i = 0; i < SideOption.values().length; i++) {
			System.out.println(SideOption.descriptions[i]);
		}
	}

	

	
	//set up and save 
	private void setOrderList() {
		System.out.println("Setting up order");
		
		int id = (int) orders.count();
		id++;
		order = new Order2(id, "Google", "asjhf", 25);
		orders.save(order);
		System.out.println("Save " + order.toString());
		
		
		
		}
	
	//delete the data 
	private void deleteOrderList() {
			
		
		
			Iterator<Order2> iterator = orders.findAll().iterator();
			while(iterator.hasNext()) {
				Order2 myOrder2 = iterator.next();
				System.err.println("iterator: " + myOrder2.toString());
				
				//delete by entity
				//刪除name為Google的那筆資料
				if("Google".equals(myOrder2.getPizza())) {
					orders.delete(myOrder2);
				}
			}}
		
	private void deletePizzaList() {
			Iterator<Pizza> iterator = pizzas.findAll().iterator();
			while(iterator.hasNext()) {
				Pizza myPizza = iterator.next();
				System.err.println("iterator: " + myPizza.toString());
				
				//delete by entity
				//刪除name為Google的那筆資料
				if("Google".equals(myPizza.getPizzaid())) {
					pizzas.delete(myPizza);
				}
		}
		}
	private void deleteSideMenuList(){
			Iterator<SideMenu> iterator = sidemenus.findAll().iterator();
			while(iterator.hasNext()) {
				SideMenu mySidemenu = iterator.next();
				System.err.println("iterator: " + mySidemenu.toString());
				
				//delete by entity
				//刪除name為Google的那筆資料
				if("Google".equals(mySidemenu.getSideoptionid())) {
					sidemenus.delete(mySidemenu);
				}
		}
		}
	
	//User interface
	public void selectMenuUi(HashMap<String,Object> map) {
		try {
			SelectMenu dialog = new SelectMenu(map);
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		SpringApplicationBuilder builder = new SpringApplicationBuilder(App.class);
        builder.headless(false).run(args);
	}

	@Override
	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		System.out.println("working");
		setOrderList();
		map.put("orders", orders);
		map.put("order", order);
		map.put("pizzas", pizzas);
		map.put("sidemenus", sidemenus);
		selectMenuUi(map);
	
		
		deleteOrderList();
		//UI start 
		
		//select different menu
		
		
		//UI select side menu or pizza menu
//		selectSideMenuUi();
		
		
		//view cart 

//		CartUi();
		//UI select pizza detail 
		
		//save pizza detail

		//UI select side menu detail 
		
		//save side menu detail 
		
	}

}
