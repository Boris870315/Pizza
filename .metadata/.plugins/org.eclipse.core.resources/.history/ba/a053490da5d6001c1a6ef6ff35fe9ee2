package yummypizza;



import java.util.Iterator;

import javax.swing.JDialog;

import org.springframework.beans.factory.InitializingBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;


import yummypizza.gui.Cart;
import yummypizza.gui.PizzaMenu;
import yummypizza.gui.SelectMenu;
import yummypizza.gui.SelectSideMenu;
import yummypizza.model.Order2;
import yummypizza.model.Pizza;
import yummypizza.model.SideMenu;
import yummypizza.model.product.Base;
import yummypizza.model.product.Menu;
import yummypizza.model.product.Sauce;
import yummypizza.model.product.SideOption;
import yummypizza.model.product.Size;
import yummypizza.model.product.Topping;
import yummypizza.repo.OrderList;
import yummypizza.repo.PizzaList;
import yummypizza.repo.ReviewOrder;
import yummypizza.repo.SideMenuList;

@SpringBootApplication
public class App implements InitializingBean {

	@Autowired
	private OrderList orders;
	@Autowired
	private PizzaList pizzas;
	@Autowired
	private SideMenuList sidemenus;
	//public ReviewOrder review;
	
	
	
	Order2 order;

	// list the menu

	/*
	 * first choose the pizza or side menu and then print one of them
	 */

	private  void printMenu() {
		System.out.println(Menu.question);
		for (int i = 0; i < Menu.values().length; i++) {
			System.out.println(Menu.descriptions[i]);

		}
		for (Menu menu : Menu.values()) {
			System.out.println(menu);
		}

	}

	/**
	 * 
	 * @return ����ϥΪ̿�J���ﶵ
	 */
	private  Menu getSelectedMenu() {
		//return Menu.pizza;
		return Menu.sidemenu;
	}

	private  void printPizza() {
		System.out.println(Base.question);
		for (Base b : Base.values()) {
			System.out.println(b.getDescription());
		}

		System.out.println(Sauce.question);
		for (int i = 0; i < Sauce.values().length; i++) {
			System.out.println(Sauce.descriptions[i]);
		}

		System.out.println(Size.question);
		for (int i = 0; i < Size.values().length; i++) {
			System.out.println(Size.descriptions[i]);
		}

		System.out.println(Topping.question);
		for (int i = 0; i < Topping.values().length; i++) {
			System.out.println(Topping.descriptions[i]);
		}
	}
	private  void printSideMenu() {
		System.out.println(SideOption.question);
		for (int i = 0; i < SideOption.values().length; i++) {
			System.out.println(SideOption.descriptions[i]);
		}
	}

	

	
	//set up and save 
	private void setuporderlist() {
		System.out.println("Setting up order");

		order = new Order2(123, "Google", "asjhf", 25);
		orders.save(order);
		System.out.println("Save " + order.toString());
		System.out.print("");
		order =new Order2(5465,"ashdflk", "sadhl", 22);
		orders.save(order);
		
		}
	private Pizza setPizzaDetail(int pizzaid, Sauce sauce, Base base, Size size, Topping topping) {
		System.out.println("Saving up side menu");
		Pizza pizza = new Pizza();
		pizza.setPizzaid(pizzaid);
		pizza.setOrderId(order.getOrderId());
		pizza.setSauce(sauce);
		pizza.setSize(size);
		pizza.setBase(base);
		pizza.setTopping(topping);
		
		pizzas.save(pizza);
		return pizza;
	}
	private SideMenu saveSideMenuDetail(SideOption sideoption, int sideoption_amount) {
		
		System.out.println("Setting up side menu");
		SideMenu sidemenu =new SideMenu();
		sidemenu.setSideoptionlist(sideoption);
		sidemenu.setAmount(sideoption_amount);
		
		sidemenus.save(sidemenu);
		return sidemenu;
		
		
	}
	
	//delete the data 
	private void deleteOrderList() {
			
		
		
			Iterator<Order2> iterator = orders.findAll().iterator();
			while(iterator.hasNext()) {
				Order2 myOrder2 = iterator.next();
				System.err.println("iterator: " + myOrder2.toString());
				
				//delete by entity
				//刪除name為Google的那筆資料
				if("Google".equals(myOrder2.getPizza())) {
					orders.delete(myOrder2);
				}
			}}
		
	private void deletePizzaList() {
			Iterator<Pizza> iterator = pizzas.findAll().iterator();
			while(iterator.hasNext()) {
				Pizza myPizza = iterator.next();
				System.err.println("iterator: " + myPizza.toString());
				
				//delete by entity
				//刪除name為Google的那筆資料
				if("Google".equals(myPizza.getPizzaid())) {
					pizzas.delete(myPizza);
				}
		}
		}
	private void deleteSideMenuList(){
			Iterator<SideMenu> iterator = sidemenus.findAll().iterator();
			while(iterator.hasNext()) {
				SideMenu myOrder2 = iterator.next();
				System.err.println("iterator: " + myOrder2.toString());
				
				//delete by entity
				//刪除name為Google的那筆資料
				if("Google".equals(myOrder2.getSideoptionid())) {
					sidemenus.delete(myOrder2);
				}
		}
		}
	
	//User interface
	public void selectMenuUi() {
		try {
			SelectMenu dialog = new SelectMenu();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	public void selectPizzaUi() {
		try {
			PizzaMenu dialog = new PizzaMenu();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public void selectSideMenuUi() {
		try {
			SelectSideMenu dialog = new SelectSideMenu();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public void CartUi() {
		try {
			Cart dialog = new Cart();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		SpringApplicationBuilder builder = new SpringApplicationBuilder(App.class);
        builder.headless(false).run(args);
	}

	@Override
	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		
		System.out.println("working");
	
		
		setuporderlist();
		deleteOrderList();
		//UI start 
		
		//select different menu
		selectMenuUi();
		
		//UI select side menu or pizza menu
		selectPizzaUi();
		selectSideMenuUi();
		
		
		//view cart 

		CartUi();
		//UI select pizza detail 
		
		//save pizza detail

		setPizzaDetail(123,Sauce.BBQ, Base.gluten, Size.large, Topping.sauage_sizzle);
		setPizzaDetail(452,Sauce.BBQ, Base.gluten, Size.large, Topping.sauage_sizzle);
		setPizzaDetail(543,Sauce.BBQ, Base.gluten, Size.large, Topping.sauage_sizzle);
		setPizzaDetail(547,Sauce.BBQ, Base.gluten, Size.large, Topping.sauage_sizzle);
		//UI select side menu detail 
		
		//save side menu detail 
		
	}

}
