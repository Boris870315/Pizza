package yummypizza;



import java.util.HashMap;

import javax.swing.JDialog;

import org.springframework.beans.factory.InitializingBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;



import yummypizza.gui.TypeDetails;
import yummypizza.model.Order2;
import yummypizza.model.product.Base;
import yummypizza.model.product.Menu;
import yummypizza.model.product.Sauce;
import yummypizza.model.product.Size;
import yummypizza.model.product.Topping;
import yummypizza.repo.OrderList;
import yummypizza.repo.PizzaList;
import yummypizza.repo.SideMenuList;

@SpringBootApplication
public class App implements InitializingBean {

	@Autowired
	private OrderList orders;
	@Autowired
	private PizzaList pizzas;
	@Autowired
	private SideMenuList sidemenus;
	
	private HashMap<String, Object> map = new HashMap();
	
	
	
	
	Order2 order = new Order2();

	// list the menu

	/*
	 * first choose the pizza or side menu and then print one of them
	 */

	private  void printMenu() {
		System.out.println(Menu.question);
		for (int i = 0; i < Menu.values().length; i++) {
			System.out.println(Menu.descriptions[i]);

		}
		for (Menu menu : Menu.values()) {
			System.out.println(menu);
		}

	}

	/**
	 * 
	 * @return ����ϥΪ̿�J���ﶵ
	 */


	private  void printPizza() {
		System.out.println(Base.question);
		for (Base b : Base.values()) {
			System.out.println(b.getDescription());
		}

		System.out.println(Sauce.question);
		for (int i = 0; i < Sauce.values().length; i++) {
			System.out.println(Sauce.descriptions[i]);
		}

		System.out.println(Size.question);
		for (int i = 0; i < Size.values().length; i++) {
			System.out.println(Size.descriptions[i]);
		}

		System.out.println(Topping.question);
		for (int i = 0; i < Topping.values().length; i++) {
			System.out.println(Topping.descriptions[i]);
		}
	}

	
	//User interface
	public void typeDetailsUi(HashMap<String,Object> map) {
		try {
			TypeDetails dialog = new TypeDetails(map);
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		SpringApplicationBuilder builder = new SpringApplicationBuilder(App.class);
        builder.headless(false).run(args);
	}

	@Override
	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		System.out.println("working");
		map.put("orders", orders);
		map.put("order", order);
		map.put("pizzas", pizzas);
		map.put("sidemenus", sidemenus);
		typeDetailsUi(map);
	
		
	}

}
